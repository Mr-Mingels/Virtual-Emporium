{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function Products() {\n  _s();\n  const [products, setProducts] = useState(null);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/all-products');\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getProducts();\n  }, []);\n  return {\n    products\n  };\n}\n_s(Products, \"8/Hhf2onsmvGCykHlTCLKPkfVcY=\");\n_c = Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useEffect","useState","axios","Products","_s","products","setProducts","getProducts","response","get","console","log","err","_c","$RefreshReg$"],"sources":["C:/Users/Sycol/ReactProjects/virtual-emporium/client/src/components/Products.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function Products() {\r\n    const [products, setProducts] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () => {\r\n            try {   \r\n                const response = await axios.get('http://localhost:5000/all-products')\r\n                console.log(response)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getProducts()\r\n    },[])\r\n\r\n    return { products }\r\n}\r\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,oCAAoC,CAAC;QACtEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MACpB;IACJ,CAAC;IACDL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAAEF;EAAS,CAAC;AACvB;AAACD,EAAA,CAhBuBD,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}