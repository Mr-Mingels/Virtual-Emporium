[{"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\index.tsx":"1","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\App.tsx":"2","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\NotFound.tsx":"3","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\ScrollToTop.tsx":"4","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\FetchProducts.ts":"5","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\NavBar.tsx":"6","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Footer.tsx":"7","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\WishList\\WishList.tsx":"8","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Product\\Product.tsx":"9","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Shop\\Shop.tsx":"10","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\ShoppingCart\\ShoppingCart.tsx":"11","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Home.tsx":"12","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Authentication.tsx":"13","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\RemoveWishListItemModal.tsx":"14","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\ProductCarousel.tsx":"15","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Info.tsx":"16","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Hero.tsx":"17","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\CuratedPicks.tsx":"18","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Shop\\DropDownMenu.tsx":"19"},{"size":273,"mtime":1691608402295,"results":"20","hashOfConfig":"21"},{"size":6511,"mtime":1696237766057,"results":"22","hashOfConfig":"21"},{"size":254,"mtime":1696150950835,"results":"23","hashOfConfig":"21"},{"size":334,"mtime":1696006529447,"results":"24","hashOfConfig":"21"},{"size":671,"mtime":1696163931153,"results":"25","hashOfConfig":"21"},{"size":13537,"mtime":1696238305397,"results":"26","hashOfConfig":"21"},{"size":4661,"mtime":1696172863992,"results":"27","hashOfConfig":"21"},{"size":4424,"mtime":1696162313511,"results":"28","hashOfConfig":"21"},{"size":12639,"mtime":1696237985380,"results":"29","hashOfConfig":"21"},{"size":19100,"mtime":1696006450174,"results":"30","hashOfConfig":"21"},{"size":10083,"mtime":1696161015821,"results":"31","hashOfConfig":"21"},{"size":667,"mtime":1696006382026,"results":"32","hashOfConfig":"21"},{"size":10937,"mtime":1696161018608,"results":"33","hashOfConfig":"21"},{"size":2472,"mtime":1696160976670,"results":"34","hashOfConfig":"21"},{"size":7610,"mtime":1696006407861,"results":"35","hashOfConfig":"21"},{"size":2710,"mtime":1696006386478,"results":"36","hashOfConfig":"21"},{"size":3849,"mtime":1696238308000,"results":"37","hashOfConfig":"21"},{"size":2697,"mtime":1696238182549,"results":"38","hashOfConfig":"21"},{"size":10555,"mtime":1696006437566,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"k7tfpa",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\index.tsx",[],[],["103"],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\App.tsx",["104","105","106"],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\NotFound.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\ScrollToTop.tsx",["107"],[],"import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0); // Scroll to the top of the page on route change\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\FetchProducts.ts",["108"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function FetchProducts() {\r\n    const [allProducts, setAllProducts] = useState(null)\r\n\r\n    const fetchAllProducts = async () => {\r\n        try {\r\n            const response = await axios.get(`https://fakestoreapi.com/products`);\r\n            if (response) {\r\n                setAllProducts(response.data)\r\n            } else {\r\n                console.log('Error: Products Not Found!')\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchAllProducts();\r\n    }, []);\r\n\r\n    return { allProducts }\r\n}\r\n","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\NavBar.tsx",["109","110"],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Footer.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\WishList\\WishList.tsx",["111"],[],"import React, { FC, useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport RemoveWishListItemModal from '../RemoveWishListItemModal'\r\nimport '../../styles/WishList/WishList.css'\r\n\r\ninterface WishListProps {\r\n    windowWidth: number,\r\n    wishList: any,\r\n    userInfo: any,\r\n    getUserWishListInfo: Function,\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst WishList: FC<WishListProps> = ({ windowWidth, wishList, userInfo, getUserWishListInfo, isLoggedIn }) => {\r\n    const [removeModalOpen, setRemoveModalOpen] = useState(false)\r\n    const [modalIndex, setModalIndex] = useState<number | null>(null);\r\n    const [imgBounds, setImgBounds] = useState<DOMRect | null>(null);\r\n    const [toggleUseEffectHook, setToggleUseEffectHook] = useState(false)\r\n    const imgRef = useRef<HTMLImageElement>(null);\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            getUserWishListInfo()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!removeModalOpen) {\r\n            setModalIndex(null)\r\n        }\r\n    }, [removeModalOpen])\r\n\r\n    useEffect(() => {\r\n        if (imgRef.current) {\r\n            const bounds = imgRef.current.getBoundingClientRect();\r\n            setImgBounds(bounds);\r\n            if (bounds.height !== bounds.width) {\r\n                if (toggleUseEffectHook) {\r\n                    setToggleUseEffectHook(false)\r\n                } else {\r\n                    setToggleUseEffectHook(true)\r\n                }\r\n            }\r\n        }\r\n    }, [imgRef, windowWidth, toggleUseEffectHook, wishList]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <div className='mainLoaderWrapper'>\r\n            <span className=\"mainLoader\"></span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <section className='wishListWrapper'>\r\n            <div className='wishListContent'>\r\n                <span className='wishListAccountInfoTxt'>Logged in as: {userInfo.email}</span>\r\n                <h2 className='wishListTitle'>Wish List</h2>\r\n                <div className='wishListMainContentWrapper'>\r\n                    <div className='wishListProductsWrapper'>\r\n                        {wishList.map((product: any, index: number) => (\r\n                            <div className={`wishListProductWrapper`} key={index}>\r\n                                <div className='wishListProductContent' onClick={() => {\r\n                                    navigate(`/product/${product.id}`)\r\n                                }}>\r\n                                    <img src={product.image} className='wishListProductImg' alt='wish list item'\r\n                                        onMouseDown={(e) => e.preventDefault()} ref={imgRef} style={{ height: imgBounds?.width }} />\r\n                                    <div className='wishListProductInfoWrapper'>\r\n                                        <span className='wishListProductCategory'>{product.category.toUpperCase()}</span>\r\n                                        <h4 className='wishListProductTitle'>{product.title}</h4>\r\n                                        <span className='wishListProductPrice'>${product.price}</span>\r\n                                        <div className='wishListProductRemoveBtnWrapper'>\r\n                                            <button className='wishListProductRemoveBtn' onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                setModalIndex(index)\r\n                                                setRemoveModalOpen(true)\r\n                                                document.body.style.overflowY = 'hidden';\r\n                                            }}>Remove</button>\r\n                                        </div>\r\n                                        {(removeModalOpen && modalIndex === index) && (\r\n                                            <RemoveWishListItemModal setRemoveModalOpen={setRemoveModalOpen} product={product}\r\n                                                getUserWishListInfo={getUserWishListInfo} wishList={wishList} />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default WishList\r\n","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Product\\Product.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Shop\\Shop.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\ShoppingCart\\ShoppingCart.tsx",["112"],[],"import React, { FC, useState, useEffect } from 'react'\r\nimport '../../styles/ShoppingCart/ShoppingCart.css'\r\nimport axios from 'axios'\r\n\r\ninterface ShoppingCartProps {\r\n    windowWidth: number,\r\n    shoppingCart: any,\r\n    userInfo: any,\r\n    getUserCartInfo: Function,\r\n    isLoggedIn: boolean,\r\n}\r\n\r\nconst ShoppingCart: FC<ShoppingCartProps> = ({ windowWidth, shoppingCart, userInfo, getUserCartInfo, isLoggedIn }) => {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [modalIndex, setModalIndex] = useState<number | null>(null);\r\n    const [totalItems, setTotalItems] = useState(0)\r\n    const [totalCost, setTotalCost] = useState(0)\r\n    const [loader, setLoader] = useState(false)\r\n    const [checkOutLoader, setCheckOutLoader] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            getUserCartInfo()\r\n        }\r\n    }, [])\r\n\r\n    const handleRemoveModalOpen = (indexId: number) => {\r\n        setModalIndex(indexId)\r\n        setModalOpen(true)\r\n        document.body.style.overflowY = 'hidden';\r\n    }\r\n\r\n    const handleRemoveModalClose = () => {\r\n        if (loader) return\r\n        setModalIndex(null)\r\n        setModalOpen(false)\r\n        document.body.style.overflowY = 'auto';\r\n    }\r\n\r\n    useEffect(() => {\r\n        const itemQuantitys = shoppingCart.map((product: any) => product.productQuantity);\r\n        setTotalItems(itemQuantitys.reduce((accumulator: any, currentValue: any) => {\r\n            return accumulator + currentValue;\r\n        }, 0))\r\n        const subTotals = shoppingCart.map((product: any) => product.productQuantity * product.price);\r\n        setTotalCost(subTotals.reduce((accumulator: any, currentValue: any) => {\r\n            return accumulator + currentValue;\r\n        }, 0))\r\n    }, [shoppingCart])\r\n\r\n    const removeItemFromCart = async (productId: any) => {\r\n        setLoader(true)\r\n        try {\r\n            const response = await axios.delete('/remove-product', {\r\n                data: { productId },\r\n                withCredentials: true\r\n            });\r\n            if (response.status === 200) {\r\n                await getUserCartInfo()\r\n                handleRemoveModalClose()\r\n            }\r\n            setLoader(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            setLoader(false)\r\n        }\r\n    }\r\n\r\n    const handleCheckOut = async () => {\r\n        setCheckOutLoader(true)\r\n        try {\r\n            const response = await axios.post('/create-checkout-session', shoppingCart, { withCredentials: true })\r\n            if (response.status === 200) {\r\n                const { url } = response.data;\r\n                window.location.href = url;\r\n            }\r\n            setCheckOutLoader(false)\r\n        } catch (err) {\r\n            console.log(err)\r\n            setCheckOutLoader(false)\r\n        }\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <div className='mainLoaderWrapper'>\r\n            <span className=\"mainLoader\"></span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <section className='shoppingCartWrapper'>\r\n            <div className='shoppingCartContent'>\r\n                <span className='shoppingCartAccountInfoTxt'>Logged in as: {userInfo.email}</span>\r\n                <h2 className='shoppingCartTitle'>Shopping Cart</h2>\r\n                <div className='shoppingCartMainContentWrapper'>\r\n                    <div className='shoppingCartProductsWrapper'>\r\n                        {shoppingCart.map((product: any, index: number) => (\r\n                            <div className={`shoppingCartProductWrapper ${index === 0 ? 'firstProduct' : ''}`} key={index}>\r\n                                <div className='shoppingCartProductContent'>\r\n                                    <img src={product.image} className='shoppingCartProductImg' alt='shopping cart product'\r\n                                        onMouseDown={(e) => e.preventDefault()} />\r\n                                    <div className='shoppingCartProductInfoWrapper'>\r\n                                        <h4 className='shoppingCartProductTitle'>{product.title}</h4>\r\n                                        <span className='shoppingCartProductColorTxt'>Color: {product.color.toUpperCase()}</span>\r\n                                        <span className='shoppingCartProductSizeTxt'>Size: {product.size}</span>\r\n                                        <span className='shoppingCartProductQuantityTxt'>Quantity: {product.productQuantity}</span>\r\n                                        <div className='shoppingCartProductPricesWrapper'>\r\n                                            <span className='shoppingCartProductPrice'>${product.price}</span>\r\n                                            <span className='shoppingCartProductSubTotal'>SubTotal:\r\n                                                ${product.price * product.productQuantity}</span>\r\n                                        </div>\r\n                                        <div className='shoppingCartProductRemoveBtnWrapper'>\r\n                                            <button className='shoppingCartProductRemoveBtn' \r\n                                            onClick={() => checkOutLoader ? null : handleRemoveModalOpen(index)}>Remove</button>\r\n                                        </div>\r\n                                        {(modalOpen && modalIndex === index) && (\r\n                                            <div className='shoppingCartRemoveModalWrapper'>\r\n                                                <div className='shoppingCartRemoveModalContent'>\r\n                                                    <h5 className='shoppingCartRemoveModalHeaderTxt'>Remove Item</h5>\r\n                                                    <p className='shoppingCartRemoveModalTxt'>Are you sure you want to remove this item from your cart?</p>\r\n                                                    <div className='shoppingCartRemoveModalBtnsWrapper'>\r\n                                                        {loader ? (\r\n                                                            <button className='shoppingCartRemoveModalBtn loading'>\r\n                                                                <span className='btnLoader'></span>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <button className='shoppingCartRemoveModalBtn'\r\n                                                                onClick={() => removeItemFromCart(product._id.toString())}>REMOVE</button>\r\n                                                        )}\r\n                                                        <button className='shoppingCartRemoveModalBtn cancel'\r\n                                                            onClick={() => handleRemoveModalClose()}>CANCEL</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className='shoppingCartCheckOutWrapper'>\r\n                        <div className='shoppingCartOverViewWrapper'>\r\n                            <div className='shoppingCartOverViewHeader'>\r\n                                <h3 className='overViewHeaderTitle'>Order Summary</h3>\r\n                                <span className='overViewHeaderItemCount'>{totalItems ? totalItems : 0} Item(s)</span>\r\n                            </div>\r\n                            <div className='shoppingCartOverViewBody'>\r\n                                <div className='shoppingCartOverViewBodyItemWrapper top'>\r\n                                    <span className='shoppingCartOverViewBodyItem'>Item(s) Subtotal</span>\r\n                                    <span className='shoppingCartOverViewBodyItem'>${totalCost ? totalCost : 0}</span></div>\r\n                                <div className='shoppingCartOverViewBodyItemWrapper'>\r\n                                    <span className='shoppingCartOverViewBodyItem'>Shipping</span>\r\n                                    <span className='shoppingCartOverViewBodyItem'>TBD</span></div>\r\n                                <div className='shoppingCartOverViewBodyItemWrapper'>\r\n                                    <span className='shoppingCartOverViewBodyItem'>Subtotal</span>\r\n                                    <span className='shoppingCartOverViewBodyItem'>${totalCost ? totalCost : 0}</span></div>\r\n                                <div className='shoppingCartOverViewBodyItemWrapper bottom'>\r\n                                    <span className='shoppingCartOverViewBodyItem'>Estimated Tax</span>\r\n                                    <span className='shoppingCartOverViewBodyItem'>TBD</span></div>\r\n                            </div>\r\n                            <div className='shoppingCartOverViewFooter'>\r\n                                <h3 className='overViewFooterTitle'>Order Total</h3>\r\n                                <span className='overViewFooterItemCount'>${totalCost ? totalCost : 0}</span>\r\n                            </div>\r\n                        </div>\r\n                        {checkOutLoader ? (\r\n                            <button className='shoppingCartCheckOutBtn loading'>\r\n                                <span className='btnLoader'></span>\r\n                            </button>\r\n                        ) : (\r\n                            <div className='shoppingCartCheckOutBtnWrapper' onClick={() => handleCheckOut()}>\r\n                                <button className='shoppingCartCheckOutBtn'>CHECKOUT</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart\r\n","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Home.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Authentication.tsx",["113","114","115"],[],"import React, { FC, useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { faWolfPackBattalion } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../styles/Authentication.css'\r\nimport axios from 'axios';\r\n\r\ninterface AuthProps {\r\n    handleAuthenticationClose: Function,\r\n    isLoggedIn: boolean,\r\n    getUserInfo: Function,\r\n    userInfo: any,\r\n    authNavigationOption: string\r\n}\r\n\r\nconst Authentication: FC<AuthProps> = ({ handleAuthenticationClose, isLoggedIn, getUserInfo, userInfo, authNavigationOption }) => {\r\n    const [authConfig, setAuthConfig] = useState('signUp');\r\n    const [redEmailPlaceHolder, setRedEmailPlaceHolder] = useState(false);\r\n    const [redPasswordPlaceholder, setRedPasswordPlaceholder] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [demoLoader, setDemoLoader] = useState(false)\r\n    const [email, setEmail] = useState({\r\n        value: \"\",\r\n        placeholder: \"Enter your email\",\r\n    });\r\n    const [password, setPassword] = useState({\r\n        value: \"\",\r\n        placeholder: \"Enter your password\",\r\n    });\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        setRedPasswordPlaceholder(false);\r\n        setRedEmailPlaceHolder(false);\r\n        setEmail({ ...email, value: \"\", placeholder: \"Enter your email\" });\r\n        setPassword({ ...password, value: \"\", placeholder: \"Enter your password\" });\r\n    }, [authConfig]);\r\n\r\n    const handleFormSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        if (demoLoader) return\r\n        setLoader(true);\r\n        if (email.value === \"\") {\r\n            setRedEmailPlaceHolder(true);\r\n            setEmail({ ...email, placeholder: \"Please Fill Out This Field\" });\r\n        }\r\n        if (password.value === \"\") {\r\n            setRedPasswordPlaceholder(true);\r\n            setPassword({ ...password, placeholder: \"Please Fill Out This Field\" });\r\n        }\r\n        if (password.value === \"\" || email.value === \"\") {\r\n            setLoader(false);\r\n            return;\r\n        }\r\n\r\n        const user = {\r\n            email: email.value.toUpperCase(),\r\n            password: password.value,\r\n        };\r\n\r\n        try {\r\n            const path = authConfig === 'signUp' ? \"sign-up-page\" : \"log-in-page\";\r\n\r\n            const response = await axios.post(`/${path}`, user, { withCredentials: true, });\r\n            if (authConfig === 'signUp' && response.status === 200) {\r\n                setAuthConfig('logIn')\r\n                setEmail({ ...email, value: \"\" });\r\n                setPassword({ ...password, value: \"\" });\r\n            } else if (authConfig === \"logIn\" && response.status === 200) {\r\n                await getUserInfo()\r\n                handleAuthenticationClose(false)\r\n                if (authNavigationOption) {\r\n                    navigate(authNavigationOption)\r\n                }\r\n            }\r\n            setLoader(false);\r\n        } catch (error: any) {\r\n            if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                console.error(\"Error message: \", error.response.data.message);\r\n                if (error.response.data.message === \"Email is incorrect\") {\r\n                    setRedEmailPlaceHolder(true);\r\n                    setEmail({ ...email, value: \"\", placeholder: \"Incorrect email\" });\r\n                } else if (error.response.data.message === \"Incorrect password\") {\r\n                    setRedPasswordPlaceholder(true);\r\n                    setPassword({\r\n                        ...password,\r\n                        value: \"\",\r\n                        placeholder: \"Incorrect password\",\r\n                    });\r\n                } else if (error.response.data.message === \"Email has already been taken\") {\r\n                    setRedEmailPlaceHolder(true);\r\n                    setEmail({\r\n                        ...email,\r\n                        value: \"\",\r\n                        placeholder: \"Email has already been taken\",\r\n                    });\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.error(\"Error\", error.message);\r\n                }\r\n                setLoader(false);\r\n            }\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (email.value !== \"\") {\r\n            setRedEmailPlaceHolder(false);\r\n            setEmail({ ...email, placeholder: \"Enter your email\" });\r\n        }\r\n    }, [email.value]);\r\n\r\n    useEffect(() => {\r\n        if (password.value !== \"\") {\r\n            setRedPasswordPlaceholder(false);\r\n            setPassword({ ...password, placeholder: \"Enter your password\" });\r\n        }\r\n    }, [password.value]);\r\n\r\n    const demoAccountLogIn = async () => {\r\n        if (loader) return\r\n        setDemoLoader(true)\r\n        const user = {\r\n            email: \"DEMOACCOUNT@GMAIL.COM\",\r\n            password: \"1234\",\r\n        };\r\n        try {\r\n            const response = await axios.post(`/log-in-page`, user, { withCredentials: true });\r\n            if (response.status === 200) {\r\n                await getUserInfo()\r\n                handleAuthenticationClose(false)\r\n                if (authNavigationOption) {\r\n                    navigate(authNavigationOption)\r\n                }\r\n            }\r\n            setDemoLoader(false)\r\n        } catch (err) {\r\n            console.log(err);\r\n            setDemoLoader(false)\r\n        }\r\n    };\r\n\r\n    const logOut = async () => {\r\n        setLoader(true)\r\n        try {\r\n            const response = await axios.get(`/log-out`, { withCredentials: true })\r\n            if (response.status === 200) {\r\n                await getUserInfo()\r\n                if (location.pathname === '/cart' || location.pathname === '/wishlist') {\r\n                    navigate('/')\r\n                }\r\n                handleAuthenticationClose(false)\r\n            }\r\n            setLoader(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setLoader(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='authWrapper'>\r\n            <div className={`authContent ${isLoggedIn ? 'logOut' : ''}`}>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <h5 className='authLogOutTitle'>Log Out</h5>\r\n                        <div className='authLogOutTxtWrapper'>\r\n                            <span className='authLogOutTxt accountInfo'>Account: {userInfo.email}</span>\r\n                            <span className='authLogOutTxt'>Are you sure you want to log out of your account?</span>\r\n                        </div>\r\n                        <div className='authLogOutBtnsWrapper'>\r\n                            {loader ? (\r\n                                <button type='button' className=\"authLogOutBtns authLoader\">\r\n                                    <span className=\"btnLoader\"></span>\r\n                                </button>\r\n                            ) : (\r\n                                <button className='authLogOutBtns' onClick={() => logOut()}>LOG OUT</button>\r\n                            )}\r\n                            <button className='authLogOutBtns close'\r\n                                onClick={loader ? undefined : () => handleAuthenticationClose(false)}>CLOSE</button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='authLogoWrapper'>\r\n                            <FontAwesomeIcon icon={faWolfPackBattalion} className='authLogoIcon' />\r\n                        </div>\r\n                        <h2 className='authTitle'>{authConfig === 'signUp' ? 'Create your Account' : \"Log into your Account\"}</h2>\r\n                        <div className='authDemoAccountTxtWrapper'>\r\n                            {demoLoader ? (\r\n                                <span className='authDemoLoader'></span>\r\n                            ) : (\r\n                                <span className='authDemoAccountTxt' onClick={() => demoAccountLogIn()}>Use Demo Account</span>\r\n                            )}\r\n                        </div>\r\n                        <span></span>\r\n                        <form method=\"POST\" className=\"authForm\" onSubmit={handleFormSubmit}>\r\n                            <label className=\"authLabel\">Email<span className=\"authRequireTag\">*</span>\r\n                            </label>\r\n                            <input type=\"email\" name=\"email\" placeholder={email.placeholder}\r\n                                className={`authFormEmailInput ${redEmailPlaceHolder ? \"field\" : \"\"}`}\r\n                                onChange={(e) => setEmail({ ...email, value: e.target.value })} value={email.value}\r\n                            />\r\n                            <label className=\"authLabel\">Password<span className=\"authRequireTag\">*</span></label>\r\n                            <input type=\"password\" name=\"password\" placeholder={password.placeholder}\r\n                                className={`authFormPassWordInput ${redPasswordPlaceholder ? \"field\" : \"\"}`}\r\n                                onChange={(e) => setPassword({ ...password, value: e.target.value })} value={password.value}\r\n                            />\r\n                            <div className='authBtnsWrapper'>\r\n                                {loader ? (\r\n                                    <button type='button' className=\"authBtn authLoader\">\r\n                                        <span className=\"btnLoader\"></span>\r\n                                    </button>\r\n                                ) : (\r\n                                    <button type=\"submit\" className=\"authBtn authenticate\">\r\n                                        {authConfig === 'signUp' ? \"Sign Up\" : \"Log In\"}\r\n                                    </button>\r\n                                )}\r\n                                <button type='button' className='authBtn close'\r\n                                    onClick={loader || demoLoader ? undefined : () => handleAuthenticationClose(false)}>Close</button>\r\n                            </div>\r\n                            <span className='authPromptWrapper'>{authConfig === 'signUp' ? \"Already have an account?\" : \"Don't have an account?\"}\r\n                                {authConfig === 'signUp' ? <span className='authPrompt' onClick={() => setAuthConfig('logIn')}>Log In</span> :\r\n                                    <span className='authPrompt' onClick={() => setAuthConfig('signUp')}>Create Account</span>}</span>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Authentication\r\n","C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\RemoveWishListItemModal.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\ProductCarousel.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Info.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\Hero.tsx",["116"],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Home\\CuratedPicks.tsx",[],[],"C:\\Users\\Sycol\\ReactProjects\\virtual-emporium\\client\\src\\components\\Shop\\DropDownMenu.tsx",[],[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":40,"nodeType":"121","messageId":"122","endLine":2,"endColumn":51},{"ruleId":"119","severity":1,"message":"123","line":2,"column":53,"nodeType":"121","messageId":"122","endLine":2,"endColumn":64},{"ruleId":"124","severity":1,"message":"125","line":90,"column":5,"nodeType":"126","endLine":90,"endColumn":17,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"128","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"128","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"129","line":78,"column":6,"nodeType":"126","endLine":78,"endColumn":25,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"131","line":84,"column":6,"nodeType":"126","endLine":84,"endColumn":31,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":26,"column":8,"nodeType":"126","endLine":26,"endColumn":10,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"135","line":25,"column":8,"nodeType":"126","endLine":25,"endColumn":10,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"137","line":38,"column":8,"nodeType":"126","endLine":38,"endColumn":20,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":114,"column":8,"nodeType":"126","endLine":114,"endColumn":21,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":121,"column":8,"nodeType":"126","endLine":121,"endColumn":24,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"143","line":44,"column":8,"nodeType":"126","endLine":44,"endColumn":19,"suggestions":"144"},"no-new-object",["145"],"@typescript-eslint/no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserCartInfo' and 'getUserWishListInfo'. Either include them or remove the dependency array.","ArrayExpression",["146"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'drawerOpen', 'isLoggedIn', and 'navigate'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'drawerOpen'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'getUserWishListInfo' and 'isLoggedIn'. Either include them or remove the dependency array. If 'getUserWishListInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"React Hook useEffect has missing dependencies: 'getUserCartInfo' and 'isLoggedIn'. Either include them or remove the dependency array. If 'getUserCartInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],"React Hook useEffect has missing dependencies: 'email' and 'password'. Either include them or remove the dependency array. You can also do a functional update 'setEmail(e => ...)' if you only need 'email' in the 'setEmail' call.",["151"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array. You can also do a functional update 'setEmail(e => ...)' if you only need 'email' in the 'setEmail' call.",["152"],"React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array. You can also do a functional update 'setPassword(p => ...)' if you only need 'password' in the 'setPassword' call.",["153"],"React Hook useEffect has a missing dependency: 'handleNextSlide'. Either include it or remove the dependency array.",["154"],"no-object-constructor",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [getUserCartInfo, getUserWishListInfo, isLoggedIn]",{"range":"173","text":"174"},"Update the dependencies array to be: [drawerOpen, isLoggedIn, location.pathname, navigate]",{"range":"175","text":"176"},"Update the dependencies array to be: [drawerOpen, openAuthenticationModal]",{"range":"177","text":"178"},"Update the dependencies array to be: [getUserWishListInfo, isLoggedIn]",{"range":"179","text":"180"},"Update the dependencies array to be: [getUserCartInfo, isLoggedIn]",{"range":"181","text":"182"},"Update the dependencies array to be: [authConfig, email, password]",{"range":"183","text":"184"},"Update the dependencies array to be: [email, email.value]",{"range":"185","text":"186"},"Update the dependencies array to be: [password, password.value]",{"range":"187","text":"188"},"Update the dependencies array to be: [autoSlide, handleNextSlide]",{"range":"189","text":"190"},[3049,3061],"[getUserCartInfo, getUserWishListInfo, isLoggedIn]",[2396,2415],"[drawerOpen, isLoggedIn, location.pathname, navigate]",[2531,2556],"[drawerOpen, openAuthenticationModal]",[975,977],"[getUserWishListInfo, isLoggedIn]",[869,871],"[getUserCartInfo, isLoggedIn]",[1550,1562],"[authConfig, email, password]",[4691,4704],"[email, email.value]",[4915,4931],"[password, password.value]",[1681,1692],"[autoSlide, handleNextSlide]"]